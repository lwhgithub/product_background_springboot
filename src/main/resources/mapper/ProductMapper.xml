<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
	例如namespace="com.szh.mapper.personMapper"就是com.szh.mapper(包名)+personMapper(personMapper.xml文件去除后缀) -->
<!--        keyProperty="id" useGeneratedKeys="true"   添加后返回id-->
<mapper namespace="com.fh.product.product.mapper.ProductMapper">
    <select id="getProductBrandData" resultType="com.fh.product.brand.model.Brand">
        select * from product_brand where brandisdel=1;
    </select>
    <select id="getProduct" resultType="com.fh.product.product.model.Product">
        select * from t_product where productIsDel = 1;
    </select>
    <insert id="addProduct" parameterType="com.fh.product.product.model.Product" keyProperty="productId" useGeneratedKeys="true">
        insert into t_product (productName,productTitle,productBrandId,productTypeId,productDesc,productPrice,productStocks,productSortNum,productImgPath,productCreateDate,productUpdateDate,productAuthor,productIsDel)
                        values (#{productName},#{productTitle},#{productBrandId},#{productTypeId},#{productDesc},#{productPrice},#{productStocks},#{productSortNum},#{productImgPath},#{productCreateDate},#{productUpdateDate},#{productAuthor},#{productIsDel})
    </insert>
    <update id="updateProduct" parameterType="com.fh.product.product.model.Product">
        update t_product set
            productName=#{productName},productTitle=#{productTitle},productBrandId=#{productBrandId},
            productTypeid=#{productTypeid},productDecs=#{productDecs},productPrice=#{productPrice},
            productStocks=#{productStocks},productSortNum=#{productSortNum},productImgPath=#{productImgPath},
            productCreateDate=#{productCreateDate},productUpdateDate=#{productUpdateDate},
            productAuthor=#{productAuthor},productIsDel=#{productIsDel}
        where productId=#{productId}
    </update>

</mapper>
