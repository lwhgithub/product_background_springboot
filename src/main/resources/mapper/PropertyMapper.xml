<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
	例如namespace="com.szh.mapper.personMapper"就是com.szh.mapper(包名)+personMapper(personMapper.xml文件去除后缀) -->
<!--        keyProperty="id" useGeneratedKeys="true"   添加后返回id-->
<mapper namespace="com.fh.product.property.mapper.PropertyMapper">

    <select id="getData" parameterType="com.fh.product.property.model.Property" resultType="com.fh.product.property.model.Property">
        select * from product_property propro left join product_property_category proprocat on propro.propertytypeId=proprocat.id
        <include refid="sql"></include>
        order by propertyid desc limit #{pagingStart},#{pagingSize};

    </select>
    <select id="getDatacount" parameterType="com.fh.product.property.model.Property" resultType="long">
        select count(*) from product_property where propertyisDel=1;

    </select>
    <select id="getPropertyCategory" resultType="com.fh.product.property.model.PropertyCategory">
        select * from product_property_category
    </select>
    <insert id="add" parameterType="com.fh.product.property.model.Property" >
        insert into product_property (propertyname,propertynameCH,propertytypeId,propertytype,propertyisSKU,propertyisDel,propertycreateDate,propertyauthor)
                            values (#{propertyname},#{propertynameCH},#{propertytypeId},#{propertytype},#{propertyisSKU},#{propertyisDel},#{propertycreateDate},#{propertyauthor});
    </insert>
    <update id="update" parameterType="com.fh.product.property.model.Property" >
        update product_property set propertyname=#{propertyname},propertynameCH=#{propertynameCH},propertytypeId=#{propertytypeId},propertytype=#{propertytype},propertyisSKU=#{propertyisSKU},propertyisDel=#{propertyisDel},propertyupdateDate=#{propertyupdateDate},propertyauthor=#{propertyauthor}
        where propertyid=#{propertyid}
    </update>
<!--    <delete id="delete" parameterType="int">-->
<!--        delete from product_property where propertyid=#{propertyid}-->
<!--    </delete>-->
    <update id="delete" parameterType="int">
        update product_property set propertyisDel = 2 where propertyid=#{propertyid};
    </update>
    <sql id="sql">
        <where>
            <if test="propertyisDel !=''">
                and propro.propertyisDel=1
            </if>
            <if test="propertynameCH!='' and propertynameCH!=null ">
                and propro.propertynameCH like concat('%',#{propertynameCH},'%')
            </if>
            <if test="propertytypeId!='' and propertytypeId!=null ">
                and propro.propertytypeId =#{propertytypeId}
            </if>
            <if test="propertyisSKU!='' and propertyisSKU!=null ">
                and propro.propertyisSKU =#{propertyisSKU}
            </if>
            <if test="propertytype!='' and propertytype!=null ">
                and propro.propertytype =#{propertytype}
            </if>
        </where>
    </sql>


</mapper>
